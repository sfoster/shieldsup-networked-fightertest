{"version":3,"file":"index.bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxmBAAmB;;;;;;;;;;AC5InB,mBAAmB,mBAAO,CAAC,4CAAiB;AAC5C;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA;AACA,sDAAsD,YAAY;AAClE,KAAK;AACL,GAAG;AACH;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;UC1CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,mBAAO,CAAC,4CAAiB;AACzB,mBAAO,CAAC,kCAAY","sources":["webpack://fightertest-app/./src/freezeThaw.js","webpack://fightertest-app/./src/scene.js","webpack://fightertest-app/webpack/bootstrap","webpack://fightertest-app/./src/index.js"],"sourcesContent":["var sceneData = null;\r\n\r\nfunction generateId(elem) {\r\n  return \"e-\"+Math.floor(Math.random() * Date.now() * 1000);\r\n}\r\n\r\nfunction generatePath(elem) {\r\n  let parts = [];\r\n  while (elem && elem.localName != \"a-scene\") {\r\n    parts.unshift(elem.id ? `#${elem.id}` : elem.localName);\r\n    elem = elem.parentNode;\r\n  }\r\n  return parts.join(\" > \");\r\n}\r\n\r\nfunction visitElement(elem, parentElem) {\r\n  let match = elem.localName.match(/^a-(.+)/);\r\n  if (match) {\r\n    let entity = {\r\n      \"a-type\": match[1]\r\n    };\r\n    for (let attr of elem.attributes) {\r\n      entity[attr.name] = attr.value;\r\n    }\r\n    if (!entity.id) {\r\n      entity.id = elem.id = generateId(elem);\r\n    }\r\n    entity[\"a-path\"] = generatePath(elem);\r\n    if (parentElem && parentElem.id) {\r\n      entity.parentId = parentElem.id;\r\n    }\r\n    console.log(\"adding entity: \", entity);\r\n    sceneData.entities.push(entity);\r\n  }\r\n  if (elem.childElementCount) {\r\n    for (child of elem.children) {\r\n      visitElement(child, elem);\r\n    }\r\n  }\r\n}\r\n\r\nfunction visitAssets(elem) {\r\n  console.log(\"visitAssets:\", elem.childElementCount);\r\n  for (let assetItem of elem.children) {\r\n    sceneData.assets.push({\r\n      id: assetItem.id || generateId(elem),\r\n      src: assetItem.getAttribute(\"src\"),\r\n    });\r\n    console.log(\"Adding asset:\", sceneData.assets[sceneData.assets.length-1]);\r\n  }\r\n}\r\n\r\nfunction walkScene() {\r\n  sceneData = {\r\n    assets: [],\r\n    entities: [],\r\n  };\r\n  let sceneElem = document.querySelector(\"a-scene\");\r\n  for (let child of sceneElem.children) {\r\n    console.log(\"visiting scene child\", child);\r\n    if (child.localName == \"a-assets\") {\r\n      visitAssets(child);\r\n    } else {\r\n      visitElement(child);\r\n    }\r\n  }\r\n  return sceneData;\r\n}\r\n\r\nfunction addAssets(assetsList, sceneElem) {\r\n  console.log(\"addAssets:\", assetsList);\r\n  if (!sceneElem) {\r\n    sceneElem = document.querySelector(\"a-scene\");\r\n  }\r\n  let frag = document.createDocumentFragment();\r\n  console.log(\"adding scene assets:\", assetsList);\r\n  // assets\r\n  for (let assetInfo of assetsList) {\r\n    let elem = document.createElement(\"a-assets-item\");\r\n    for (let [name, value] of Object.entries(assetInfo)) {\r\n      elem.setAttribute(name, value);\r\n    }\r\n    frag.appendChild(elem);\r\n  }\r\n  let assetElem = sceneElem.querySelector(\"a-assets\");\r\n  assetElem.appendChild(frag);\r\n}\r\n\r\nfunction addEntities(entityList, sceneElem) {\r\n  console.log(\"addEntities:\", entityList);\r\n  if (!sceneElem) {\r\n    sceneElem = document.querySelector(\"a-scene\");\r\n  }\r\n  let fragment = document.createDocumentFragment();\r\n  let excludeAttributeProperties = new Set([\"a-type\", \"a-path\", \"_depth\"])\r\n\r\n  for (let entity of entityList) {\r\n    let elem = document.createElement(\"a-\" + entity[\"a-type\"]);\r\n    let parentNode;\r\n    if (entity.parentId) {\r\n      // try the fragment first\r\n      parentNode = fragment.getElementById(entity.parentId);\r\n      if (!parentNode) {\r\n        parentNode = document.getElementById(entity.parentId);\r\n      }\r\n      if (!parentNode) {\r\n        console.warn(\"Missing parentNode for child\", entity[\"a-path\"], entity.parentId);\r\n        continue;\r\n      }\r\n    } else {\r\n      parentNode = fragment;\r\n    }\r\n    for (let [name, value] of Object.entries(entity)) {\r\n      if (excludeAttributeProperties.has(name)) {\r\n        continue;\r\n      }\r\n      elem.setAttribute(name, value);\r\n    }\r\n    parentNode.appendChild(elem);\r\n  }\r\n  if (fragment.childElementCount) {\r\n    sceneElem.appendChild(fragment);\r\n  }\r\n}\r\n\r\nfunction sortEntities(remoteEntities) {\r\n  console.log(\"remoteEntities:\", remoteEntities);\r\n  let sortedEntities = [];\r\n  for (let entity of remoteEntities) {\r\n    if (!entity._depth) {\r\n      entity._depth = entity[\"a-path\"].split(\" > \").length;\r\n    }\r\n    sortedEntities.push(entity);\r\n  }\r\n  sortedEntities.sort((a, b) => {\r\n    return a._depth > b._depth;\r\n  });\r\n  return sortedEntities;\r\n}\r\n\r\nmodule.exports = { walkScene, addAssets, addEntities, sortEntities };","const freezeThaw = require(\"./freezeThaw.js\");\r\n\r\nfunction requestSceneData(filename) {\r\n  const dataURL = new URL(filename, window.location.href);\r\n  console.log(`fetching ${dataURL}`);\r\n\r\n  return fetch(dataURL, {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n  }).then(resp => resp.json()).catch(err => console.log(\"fetch error:\", err));\r\n}\r\n\r\nfunction initScene(sceneData) {\r\n  let dataLoaded = requestSceneData(\"scene.json\");\r\n  let sceneLoaded = new Promise((resolve) => {\r\n    if (document.readyState == \"complete\") {\r\n      resolve({ target: document.querySelector(\"a-scene\") });\r\n      return;\r\n    }\r\n    window.addEventListener(\"DOMContentLoaded\", () => {\r\n      const sceneElem = document.querySelector(\"a-scene\");\r\n      sceneElem.addEventListener(\"loaded\", resolve, { once: true });\r\n    });\r\n  });\r\n  Promise.all([dataLoaded, sceneLoaded]).then(([sceneData, loadedEvent]) => {\r\n    let { assets, entities } = sceneData;\r\n    let sceneElem = loadedEvent.target;\r\n    freezeThaw.addAssets(assets, sceneElem);\r\n    let sortedEntities = freezeThaw.sortEntities(entities);\r\n    freezeThaw.addEntities(sortedEntities, sceneElem);\r\n    // console.log(\"Loaded, result:\", result);\r\n  });\r\n}\r\n\r\n// document.addEventListener(\"DOMContentLoaded\", () => {\r\n//   initScene();\r\n// });\r\n\r\nmodule.exports = {\r\n  initScene,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./freezeThaw.js\");\nrequire(\"./scene.js\");\n"],"names":[],"sourceRoot":""}