{"version":3,"file":"index.bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,UAAU,UAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,yBAAyB;AACpC,aAAa,eAAe;AAC5B,YAAY,sCAAsC;AAClD,kBAAkB,8BAA8B;AAChD,wCAAwC,iCAAiC;AACzE,wCAAwC,uCAAuC;AAC/E,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;ACtKD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,kBAAkB,+BAA+B,QAAQ,+BAA+B,QAAQ,+BAA+B;AAC/H,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AClED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxmBAAmB;;;;;;;;;;AC5InB,mBAAmB,mBAAO,CAAC,4CAAiB;AAC5C,mBAAO,CAAC,oDAAqB;AAC7B,mBAAO,CAAC,sDAAsB;AAC9B,mBAAO,CAAC,sCAAc;AACtB;AACA;AACA;AACA,0BAA0B,QAAQ;AAClC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2CAA2C;AAC3D;AACA;AACA;AACA;AACA,sDAAsD,YAAY;AAClE,KAAK;AACL,GAAG;AACH;AACA,UAAU,mBAAmB;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;;;;;;;;;ACxCA;AACA;AACA,UAAU,wBAAwB;AAClC,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;;;;;;;UCjBD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,mBAAO,CAAC,4CAAiB;AACzB,mBAAO,CAAC,kCAAY","sources":["webpack://networked-fightertest/./src/asteroid-field.js","webpack://networked-fightertest/./src/follow-rotation.js","webpack://networked-fightertest/./src/freezeThaw.js","webpack://networked-fightertest/./src/scene.js","webpack://networked-fightertest/./src/spinner.js","webpack://networked-fightertest/webpack/bootstrap","webpack://networked-fightertest/./src/index.js"],"sourcesContent":["\r\nfunction cyrb128(str) {\r\n  let h1 = 1779033703, h2 = 3144134277,\r\n      h3 = 1013904242, h4 = 2773480762;\r\n  for (let i = 0, k; i < str.length; i++) {\r\n      k = str.charCodeAt(i);\r\n      h1 = h2 ^ Math.imul(h1 ^ k, 597399067);\r\n      h2 = h3 ^ Math.imul(h2 ^ k, 2869860233);\r\n      h3 = h4 ^ Math.imul(h3 ^ k, 951274213);\r\n      h4 = h1 ^ Math.imul(h4 ^ k, 2716044179);\r\n  }\r\n  h1 = Math.imul(h3 ^ (h1 >>> 18), 597399067);\r\n  h2 = Math.imul(h4 ^ (h2 >>> 22), 2869860233);\r\n  h3 = Math.imul(h1 ^ (h3 >>> 17), 951274213);\r\n  h4 = Math.imul(h2 ^ (h4 >>> 19), 2716044179);\r\n  return [(h1^h2^h3^h4)>>>0, (h2^h1)>>>0, (h3^h1)>>>0, (h4^h1)>>>0];\r\n}\r\n\r\nfunction sfc32(a, b, c, d) {\r\n  return function() {\r\n    a >>>= 0; b >>>= 0; c >>>= 0; d >>>= 0; \r\n    var t = (a + b) | 0;\r\n    a = b ^ b >>> 9;\r\n    b = c + (c << 3) | 0;\r\n    c = (c << 21 | c >>> 11);\r\n    d = d + 1 | 0;\r\n    t = t + d | 0;\r\n    c = c + t | 0;\r\n    return (t >>> 0) / 4294967296;\r\n  }\r\n}\r\n\r\nclass PseudoRNG {\r\n  constructor(seedStr) {\r\n    // Create cyrb128 state:\r\n    let seed = this.seed = cyrb128(seedStr);\r\n    // Four 32-bit component hashes provide the seed for sfc32.\r\n    this.rand = sfc32(seed[0], seed[1], seed[2], seed[3]);\r\n  }\r\n  randomWithinBounds(lbound, ubound, coef=1) {\r\n    const n = this.rand();\r\n    let result = ((ubound - lbound) * n + lbound) * coef;\r\n    return result;\r\n  }\r\n  randomIntWithinBounds(lbound, ubound, coef=1) {\r\n    return Math.floor(this.randomWithinBounds(lbound, ubound, 1)) * coef;\r\n  }\r\n}\r\n\r\nclass _PseudoRNG {\r\n  constructor() {\r\n    this._nextIndex = 0;\r\n  }\r\n  rand() {\r\n    const val = pool[this._nextIndex++];\r\n    if (this._nextIndex >= pool.length) {\r\n      this._nextIndex = 0;\r\n    }\r\n    return val;\r\n  }\r\n  randomWithinBounds(lbound, ubound, coef=1) {\r\n    const n = this.rand();\r\n    let result = ((ubound - lbound) * n + lbound) * coef;\r\n    return result;\r\n  }\r\n  randomIntWithinBounds(lbound, ubound, coef=1) {\r\n    return Math.floor(this.randomWithinBounds(lbound, ubound, 1)) * coef;\r\n  }\r\n}\r\n\r\nconsole.log(\"Registering asteroid-field\");\r\n\r\nclass XYZBoundsType {\r\n  constructor(defaultValues) {\r\n    this.default = defaultValues;\r\n    this.type = \"array\";\r\n  }\r\n  parse(value) {\r\n    // parse out 3 triplets into x, y, z properties\r\n    if (typeof value == \"string\") {\r\n      // e.g. \"0:10 -3:6, -1:1\"\r\n      const triplets = value.split(/\\s+/).map(s => s.trim());\r\n      const returnValue = {\r\n        x: triplets[0] ? triplets[0].split(\":\").map(n => Number(n)): this.default.x,\r\n        y: triplets[1] ? triplets[1].split(\":\").map(n => Number(n)): this.default.y,\r\n        z: triplets[2] ? triplets[2].split(\":\").map(n => Number(n)): this.default.z,\r\n      };\r\n      console.log(\"parsed XYZBoundsType:\", value, returnValue);\r\n      return returnValue;\r\n    }\r\n    return value;\r\n  }\r\n  stringify(value) {\r\n    let str = [\r\n      value.x.join(\":\"),\r\n      value.y.join(\":\"),\r\n      value.z.join(\":\"),\r\n    ].join(\" \");\r\n  }\r\n}\r\n\r\nAFRAME.registerComponent('asteroid-field', {\r\n  schema:{\r\n    count:{type: 'int', default: 12},\r\n    asset: { type: \"asset\" },\r\n    seed: { type: \"string\", default: \"asteroids\" },\r\n    modelScale: { type: \"number\", default: 0.5 },\r\n    positionBounds: new XYZBoundsType({ x: [0, 1], y: [0, 1], z: [0, 1] }), \r\n    rotationBounds: new XYZBoundsType({ x: [0, 360], y: [0, 360], z: [0, 360] }), \r\n  },\r\n  generateId() {\r\n    if (!this._nextId) this._nextId = 0;\r\n    return (\"asteroid-\"+(++this._nextId));\r\n  },\r\n  init: function () {\r\n    console.log(\"asteroid-field, init with data:\", this.data);\r\n    const modelScale = this.data.modelScale;\r\n    this.asteroids = {};\r\n    this.rng = new PseudoRNG(this.data.seed);\r\n    this.spinRng = new PseudoRNG(this.data.seed + \"-spinner\");\r\n    const frag = document.createDocumentFragment();\r\n    for (let i=0; i<this.data.count; i++) {\r\n      let id = this.generateId();\r\n      let ent = this.asteroids[id] = document.createElement(\"a-entity\");\r\n      if (this.data.asset) {\r\n        ent.setAttribute(\"gltf-model\", this.data.asset);\r\n      }\r\n      ent.id = id;\r\n      let positionValue = [\r\n        this.rng.randomWithinBounds(...this.data.positionBounds.x),\r\n        this.rng.randomWithinBounds(...this.data.positionBounds.y),\r\n        this.rng.randomWithinBounds(...this.data.positionBounds.z),\r\n      ].join(\" \");\r\n      ent.setAttribute(\"position\", positionValue);\r\n      ent.object3D.scale.set(modelScale, modelScale, modelScale);\r\n      let rotationValue = [\r\n        this.rng.randomWithinBounds(...this.data.rotationBounds.x),\r\n        this.rng.randomWithinBounds(...this.data.rotationBounds.y),\r\n        this.rng.randomWithinBounds(...this.data.rotationBounds.z),\r\n      ];\r\n      ent.setAttribute(\"rotation\", rotationValue);\r\n      // console.log(\"asteroid-field, prepared rotation:\", rotationValue);\r\n\r\n      // set the per-axis spin speed \r\n      let spinnerValue = \"axes: \" + [\r\n        this.spinRng.randomWithinBounds(0, 4),\r\n        this.spinRng.randomWithinBounds(0, 4),\r\n        this.spinRng.randomWithinBounds(0, 4),\r\n      ].join(\" \");\r\n      ent.setAttribute(\"spinner\", spinnerValue);\r\n      // console.log(\"asteroid-field, prepared spinner:\", spinnerValue);\r\n      frag.appendChild(ent);\r\n    }\r\n    // console.log(\"asteroid-field, appending fragment:\", frag.childNodes);\r\n    this.el.appendChild(frag);\r\n  },\r\n  remove() {\r\n    for(let [id] of Object.keys(this.asteroids)) {\r\n      let ent = this.el.querySelector(\"#\"+id);\r\n      if (ent) {\r\n        ent.parentNode.removeChild(ent);\r\n      } else {\r\n        console.warn(\"No asteroid entity found for id: \", id);\r\n      }\r\n    }\r\n  }\r\n});      \r\n","/* global AFRAME */\r\nAFRAME.registerComponent('follow-rotation', {\r\n  schema: {\r\n    target: {\r\n      type: \"selector\",\r\n      default: false,\r\n    },\r\n    damp: {\r\n      type: \"number\",\r\n      default: 0.1,\r\n    },\r\n  },\r\n  init: function () {\r\n    // the resting state we want to return to\r\n    this.startRotationV3 = new THREE.Vector3( 0, 0, 0 );\r\n    // our current rotation\r\n    this.currentRotationV3 = this.startRotationV3.clone();\r\n    // the last rotation of the target\r\n    this.previousRotationV3 = new THREE.Vector3( 0, 0, 0 );\r\n    // the current target rotation\r\n    this.targetRotationV3 = new THREE.Vector3( 0, 0, 0 );\r\n    // temporary delta rotation\r\n    this.deltaV3 = new THREE.Vector3( 0, 0, 0 );\r\n  },\r\n  __didRotationChange(a, b) {\r\n    return !a || !b || a.distanceToSquared(b) > 0.001;\r\n  },\r\n  didRotationChange(a, b, label=\"\") {\r\n    let retValue = false;\r\n    if (!a || !b) {\r\n      console.log(\"didRotationChange: a || b falsey\", label);\r\n      retValue = true;\r\n    } else if (a.distanceToSquared(b) > 0.001) {\r\n      retValue = true;\r\n    }\r\n    if (retValue) console.log(\"didRotationChange\", label);\r\n\r\n    return retValue;\r\n  },\r\n  v3ToString(v3) {\r\n    const accuracy = 1000;\r\n    return `x: ${ Math.round(v3.x * 1000) / 1000}, y: ${ Math.round(v3.y * 1000) / 1000}, z: ${ Math.round(v3.z * 1000) / 1000}`;\r\n  },\r\n  tick() {\r\n    if (!this.data.target) {\r\n      return;\r\n    }\r\n    // we want to lag the rotation\r\n    // and trend back towards the start rotation\r\n    this.targetRotationV3.setFromEuler(this.data.target.object3D.rotation);\r\n    this.currentRotationV3.setFromEuler(this.el.object3D.rotation);\r\n\r\n    if (this.didRotationChange(this.targetRotationV3, this.previousRotationV3, \"target-rotation\")) {\r\n      this.deltaV3.copy(this.previousRotationV3);\r\n      this.deltaV3.sub(this.targetRotationV3);\r\n      this.currentRotationV3.add(this.deltaV3);\r\n      this.currentRotationV3.lerp(this.startRotationV3, 0.05);\r\n      this.el.object3D.rotation.setFromVector3(this.currentRotationV3);\r\n      this.previousRotationV3.copy(this.targetRotationV3);\r\n    } else if (\r\n      this.didRotationChange(this.currentRotationV3, this.startRotationV3, \"current-start\")\r\n    ) {\r\n      this.currentRotationV3.lerp(this.startRotationV3, this.data.damp);\r\n      this.el.object3D.rotation.setFromVector3(this.currentRotationV3);\r\n    }\r\n  }\r\n});\r\n","var sceneData = null;\r\n\r\nfunction generateId(elem) {\r\n  return \"e-\"+Math.floor(Math.random() * Date.now() * 1000);\r\n}\r\n\r\nfunction generatePath(elem) {\r\n  let parts = [];\r\n  while (elem && elem.localName != \"a-scene\") {\r\n    parts.unshift(elem.id ? `#${elem.id}` : elem.localName);\r\n    elem = elem.parentNode;\r\n  }\r\n  return parts.join(\" > \");\r\n}\r\n\r\nfunction visitElement(elem, parentElem) {\r\n  let match = elem.localName.match(/^a-(.+)/);\r\n  if (match) {\r\n    let entity = {\r\n      \"a-type\": match[1]\r\n    };\r\n    for (let attr of elem.attributes) {\r\n      entity[attr.name] = attr.value;\r\n    }\r\n    if (!entity.id) {\r\n      entity.id = elem.id = generateId(elem);\r\n    }\r\n    entity[\"a-path\"] = generatePath(elem);\r\n    if (parentElem && parentElem.id) {\r\n      entity.parentId = parentElem.id;\r\n    }\r\n    console.log(\"adding entity: \", entity);\r\n    sceneData.entities.push(entity);\r\n  }\r\n  if (elem.childElementCount) {\r\n    for (child of elem.children) {\r\n      visitElement(child, elem);\r\n    }\r\n  }\r\n}\r\n\r\nfunction visitAssets(elem) {\r\n  console.log(\"visitAssets:\", elem.childElementCount);\r\n  for (let assetItem of elem.children) {\r\n    sceneData.assets.push({\r\n      id: assetItem.id || generateId(elem),\r\n      src: assetItem.getAttribute(\"src\"),\r\n    });\r\n    console.log(\"Adding asset:\", sceneData.assets[sceneData.assets.length-1]);\r\n  }\r\n}\r\n\r\nfunction walkScene() {\r\n  sceneData = {\r\n    assets: [],\r\n    entities: [],\r\n  };\r\n  let sceneElem = document.querySelector(\"a-scene\");\r\n  for (let child of sceneElem.children) {\r\n    console.log(\"visiting scene child\", child);\r\n    if (child.localName == \"a-assets\") {\r\n      visitAssets(child);\r\n    } else {\r\n      visitElement(child);\r\n    }\r\n  }\r\n  return sceneData;\r\n}\r\n\r\nfunction addAssets(assetsList, sceneElem) {\r\n  console.log(\"addAssets:\", assetsList);\r\n  if (!sceneElem) {\r\n    sceneElem = document.querySelector(\"a-scene\");\r\n  }\r\n  let frag = document.createDocumentFragment();\r\n  console.log(\"adding scene assets:\", assetsList);\r\n  // assets\r\n  for (let assetInfo of assetsList) {\r\n    let elem = document.createElement(\"a-assets-item\");\r\n    for (let [name, value] of Object.entries(assetInfo)) {\r\n      elem.setAttribute(name, value);\r\n    }\r\n    frag.appendChild(elem);\r\n  }\r\n  let assetElem = sceneElem.querySelector(\"a-assets\");\r\n  assetElem.appendChild(frag);\r\n}\r\n\r\nfunction addEntities(entityList, sceneElem) {\r\n  console.log(\"addEntities:\", entityList);\r\n  if (!sceneElem) {\r\n    sceneElem = document.querySelector(\"a-scene\");\r\n  }\r\n  let fragment = document.createDocumentFragment();\r\n  let excludeAttributeProperties = new Set([\"a-type\", \"a-path\", \"_depth\"])\r\n\r\n  for (let entity of entityList) {\r\n    let elem = document.createElement(\"a-\" + entity[\"a-type\"]);\r\n    let parentNode;\r\n    if (entity.parentId) {\r\n      // try the fragment first\r\n      parentNode = fragment.getElementById(entity.parentId);\r\n      if (!parentNode) {\r\n        parentNode = document.getElementById(entity.parentId);\r\n      }\r\n      if (!parentNode) {\r\n        console.warn(\"Missing parentNode for child\", entity[\"a-path\"], entity.parentId);\r\n        continue;\r\n      }\r\n    } else {\r\n      parentNode = fragment;\r\n    }\r\n    for (let [name, value] of Object.entries(entity)) {\r\n      if (excludeAttributeProperties.has(name)) {\r\n        continue;\r\n      }\r\n      elem.setAttribute(name, value);\r\n    }\r\n    parentNode.appendChild(elem);\r\n  }\r\n  if (fragment.childElementCount) {\r\n    sceneElem.appendChild(fragment);\r\n  }\r\n}\r\n\r\nfunction sortEntities(remoteEntities) {\r\n  console.log(\"remoteEntities:\", remoteEntities);\r\n  let sortedEntities = [];\r\n  for (let entity of remoteEntities) {\r\n    if (!entity._depth) {\r\n      entity._depth = entity[\"a-path\"].split(\" > \").length;\r\n    }\r\n    sortedEntities.push(entity);\r\n  }\r\n  sortedEntities.sort((a, b) => {\r\n    return a._depth > b._depth;\r\n  });\r\n  return sortedEntities;\r\n}\r\n\r\nmodule.exports = { walkScene, addAssets, addEntities, sortEntities };","const freezeThaw = require(\"./freezeThaw.js\");\r\nrequire(\"./asteroid-field.js\");\r\nrequire(\"./follow-rotation.js\");\r\nrequire(\"./spinner.js\");\r\n\r\nfunction requestSceneData(filename) {\r\n  const dataURL = new URL(filename, window.location.href);\r\n  console.log(`fetching ${dataURL}`);\r\n\r\n  return fetch(dataURL, {\r\n    headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n  }).then(resp => resp.json()).catch(err => console.log(\"fetch error:\", err));\r\n}\r\n\r\nfunction initScene(sceneData) {\r\n  let dataLoaded = requestSceneData(\"scene.json\");\r\n  let sceneLoaded = new Promise((resolve) => {\r\n    if (document.readyState == \"complete\") {\r\n      resolve({ target: document.querySelector(\"a-scene\") });\r\n      return;\r\n    }\r\n    window.addEventListener(\"DOMContentLoaded\", () => {\r\n      const sceneElem = document.querySelector(\"a-scene\");\r\n      sceneElem.addEventListener(\"loaded\", resolve, { once: true });\r\n    });\r\n  });\r\n  Promise.all([dataLoaded, sceneLoaded]).then(([sceneData, loadedEvent]) => {\r\n    let { assets, entities } = sceneData;\r\n    let sceneElem = loadedEvent.target;\r\n    freezeThaw.addAssets(assets, sceneElem);\r\n    let sortedEntities = freezeThaw.sortEntities(entities);\r\n    freezeThaw.addEntities(sortedEntities, sceneElem);\r\n  });\r\n}\r\n\r\nmodule.exports = {\r\n  initScene,\r\n};\r\n","AFRAME.registerComponent('spinner', {\r\n  schema:{\r\n    axes:{type: 'vec3', default: {x: 0, y: 0, z: 0}}\r\n  },\r\n  init: function () {\r\n    let spinaxes = this.el.components.spinner.axes; \r\n    console.log(\"spinner init\", this.data);\r\n  },\r\n  tick: function(){ // called every frame\r\n    let rot = this.el.getAttribute('rotation');\r\n    let spinaxes = this.data.axes;\r\n    this.el.setAttribute('rotation', {\r\n      x: rot.x + spinaxes.x*1, \r\n      y: rot.y + spinaxes.y*1,\r\n      z: rot.z + spinaxes.z*1\r\n    });\r\n  }      \r\n});      \r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","require(\"./freezeThaw.js\");\nrequire(\"./scene.js\");\n"],"names":[],"sourceRoot":""}